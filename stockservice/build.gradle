plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.github.davidmc24.gradle.plugin.avro' version "1.9.1" 
}

group = 'com.carlospatinos'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	implementation 'io.cucumber:cucumber-java:7.12.1'
	implementation 'io.cucumber:cucumber-spring:7.12.1'
	testImplementation 'io.cucumber:cucumber-junit:7.12.1'
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'


	implementation "org.apache.avro:avro:1.11.0"
	implementation 'io.confluent:kafka-avro-serializer:7.5.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
              '--plugin', 'pretty',
              '--plugin', 'html:build/cucumber-report.html', 
              '--glue', 'com.carlospatinos.stockservice.steps', 
              'src/test/resources']
        }
    }
}


def avroSchemasDir = "src/main/avro"
// def avroSchemasDir = "src/main/resources/avro"
def avroCodeGenerationDir = "build/generated-main-avro-java"

// Add the generated Avro Java code to the Gradle source files.
sourceSets.main.java.srcDirs += [avroCodeGenerationDir]
